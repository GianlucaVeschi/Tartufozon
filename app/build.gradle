plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
    id "de.mannodermaus.android-junit5"
    id  "com.google.gms.google-services"
}

android {
    compileSdkVersion 30
    //buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.example.truffol"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        // Enables Jetpack Compose for this module
        compose true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }


    composeOptions {
        def kotlin_compiler_extension_version = "1.0.0-beta07"
        kotlinCompilerExtensionVersion kotlin_compiler_extension_version
    }

    kapt {
        correctErrorTypes = true
    }


}
// Add this line
apply plugin: 'com.google.gms.google-services'

dependencies {

    implementation 'androidx.core:core-ktx:1.3.2'

    // AppCompat: set of libraries that provide backward compatibility.
    implementation 'androidx.appcompat:appcompat:1.4.0-alpha01'

    // Google Material
    implementation 'com.google.android.material:material:1.3.0'

    // Jetpack Compose
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation "androidx.compose.foundation:foundation:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.material:material-icons-core:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    implementation "androidx.compose.runtime:runtime-rxjava2:$compose_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:1.0.0-alpha05"
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.0-alpha07"
    implementation "androidx.activity:activity-compose:1.3.0-alpha08"
    implementation "androidx.navigation:navigation-compose:2.4.0-alpha01"

    // Jetpack Compose UI
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"

    // OkHttp
    def okhttp_version = "3.14.9"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.1"

    // Stetho network
    implementation 'com.facebook.stetho:stetho:1.5.1'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.1'

    // Gson
    implementation "com.google.code.gson:gson:$gson_version"

    // Retrofit2
    def retrofit2_version = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit2_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit2_version"

    // Timber
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // Dagger Core (Is this needed ?)
    def dagger_version = "2.34.1"
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    //Dagger - Hilt
    def hilt_android = "2.33-beta"
    implementation "com.google.dagger:hilt-android:$hilt_android"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_android"

    //Hilt ViewModel /* NOT USED YET */
    //def hilt_lifecycle_viewmodel = "1.0.0-alpha03"
    //implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_lifecycle_viewmodel"

    //Hilt Navigation
    def hilt_navigation = "1.0.0-beta01"
    implementation "androidx.hilt:hilt-navigation:$hilt_navigation"

    // LiveData /* NOT USED YET */
    //def lifecycle_version = "2.3.0"
    //implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    //Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    //ROOM
    def room_version = "2.3.0"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // (Required) Writing and executing Unit Tests on the JUnit Platform
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.7.1")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.7.1")
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.7.1"
    testImplementation "junit:junit:4.13.2"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:5.7.1"

    //MockWebServer
    testImplementation("com.squareup.okhttp3:mockwebserver:4.9.0")

    // Import the Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:27.0.0')

    // Add the dependency for the Firebase SDK for Google Analytics
    // When using the BoM, don't specify versions in Firebase dependencies
    implementation 'com.google.firebase:firebase-analytics-ktx'

    // Add the dependencies for any other desired Firebase products
    // https://firebase.google.com/docs/android/setup#available-libraries

    //Chucker interceptor
    debugImplementation "com.github.chuckerteam.chucker:library:3.4.0"
    releaseImplementation "com.github.chuckerteam.chucker:library-no-op:3.4.0"

}